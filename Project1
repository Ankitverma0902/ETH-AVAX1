// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract ErrorHandling {

    uint256 public balance;


    constructor() {
        balance = 1000;
    }

 
    function deposit(uint256 amount) public {
        require(amount > 0, "Deposit amount must be greater than zero");
        balance += amount;
    }

    
    function withdraw(uint256 amount) public {
        require(amount <= balance, "Insufficient balance");
        balance -= amount;
    }

    
    function resetBalance(uint256 newBalance) public {
        assert(newBalance >= 0);
        balance = newBalance;
    }

    
    function triggerRevert() public pure {
        revert("This is a forced revert");
    }


    function validateAndRevert(uint256 value) public pure {
        require(value < 100, "Value must be less than 100");
        if (value > 50) {
            revert("Value is greater than 50, transaction reverted");
        }
    }
}
